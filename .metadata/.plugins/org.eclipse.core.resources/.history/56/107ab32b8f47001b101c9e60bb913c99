package com.spring.mvc.security.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import org.springframework.stereotype.Component;

import com.mongodb.BasicDBObject;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.spring.mvc.security.pojo.StoreRecord;

@Component
public class RecordsDao {
	
	//This is the login information for the current DB don't steal it
		/*String userName = "postgres";
		String password = "PostgreSQL_2230?";
		String hostname = "localhost";
		String port = "5433";
		String dbName="CRISPSpringMVCPrototype";
		String jdbcUrl = "jdbc:postgresql://"+hostname+":"+port+"/"+dbName;*/
		
	public ArrayList<StoreRecord> retrieveRecords(String store, String item) {
		String quantity="error";
		String address="error";
		ArrayList<StoreRecord> results = new ArrayList<StoreRecord>();
		StoreRecord temp=new StoreRecord();
		
				try {//Java forced me to do this to avoid Exceptions from the DB
					DBCollection coll = MongoFactory.getCollection("CRISPMongoDBProtoype", "products");
					 
			        // Fetching the record object from the mongo database.
			        DBObject where_query = new BasicDBObject();
			 
			        // Put the selected user_id to search.
			        where_query.put("store_name", store);
			        where_query.put("item", item);
			        coll.findOne(where_query);
			        DBCursor cursor = coll.find();
					 while(cursor.hasNext()) {
						 DBObject dbObject = cursor.next();
						 switch((int)Double.parseDouble(dbObject.get("quantity").toString())) {
				         case 1 :
				            quantity="Low";
				            break;
				         case 2 :
				        	 quantity="Medium";
					         break;
				         case 3 :
				        	 quantity="High";
				            break;
				      }//end of switch statement
						 
						 address=dbObject.get("store_street_pos").toString()+" "+dbObject.get("store_street").toString()+" "+
						dbObject.get("city").toString()+" "+dbObject.get("state").toString()+" "+dbObject.get("zipcode").toString();

						 
						 results.add(new StoreRecord(store, address, quantity, item));
								 
						 System.out.println("There is "+quantity+" "+item+" at "+ store +" at "+address);
					 }
					 return results;
					 
					
					
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					return results;
				} 
	}
}
